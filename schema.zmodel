generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id              String    @id @default(uuid())
  clerkId         String    @unique
  targetLanguage  String
  proficiencyLevel String
  learningGoals   String[]
  createdAt       DateTime  @default(now())

  // Relations
  progress        Progress[]
  vocabulary      Vocabulary[]
  lessons         Lesson[]

  // Access policies
//   @@allow('read,create', true)
//   @@allow('update,delete', auth() == this)
}

model Lesson {
  id               String    @id @default(uuid())
  title            String
  scenarioContext  String
  difficultyLevel  String
  conversationScript Json
  vocabulary       Json
  grammarPoints    Json?
  createdAt        DateTime  @default(now())

  // Relations
  user             User      @relation(fields: [userId], references: [id])
  userId           String
  progress         Progress[]

  // Access policies
//   @@allow('read', true)
//   @@allow('create,update,delete', auth() == user)
}

model Progress {
  id               String    @id @default(uuid())
  completionStatus String
  timeSpent        Int      // in seconds
  createdAt        DateTime  @default(now())

  // Relations
  user             User      @relation(fields: [userId], references: [id])
  userId           String
  lesson           Lesson    @relation(fields: [lessonId], references: [id])
  lessonId         String

  // Access policies
//   @@allow('read,create,update,delete', auth() == user)
}

model Vocabulary {
  id               String    @id @default(uuid())
  word             String
  translation      String
  masteryLevel     Int      @default(0)
  lastReviewed     DateTime?

  // Relations
  user             User      @relation(fields: [userId], references: [id])
  userId           String

  // Access policies
//   @@allow('read,create,update,delete', auth() == user)
}