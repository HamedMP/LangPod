//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserCourseRole {
  STUDENT
  TUTOR
}

enum ProgressStatus {
  COMPLETED
  IN_PROGRESS
  NOT_STARTED
}

model User {
  id          String       @id() @default(uuid())
  clerkId     String       @unique()
  createdAt   DateTime     @default(now())
  name        String
  email       String
  userCourses UserCourse[]
}

model Language {
  id            String   @id() @default(uuid())
  name          String
  code          String   @unique()
  createdAt     DateTime @default(now())
  nativeCourses Course[] @relation("NativeLanguage")
  targetCourses Course[] @relation("TargetLanguage")
}

model Course {
  id               String       @id() @default(uuid())
  nativeLanguage   Language     @relation("NativeLanguage", fields: [nativeLanguageId], references: [id])
  nativeLanguageId String
  targetLanguage   Language     @relation("TargetLanguage", fields: [targetLanguageId], references: [id])
  targetLanguageId String
  outcome          String?
  level            String
  createdAt        DateTime     @default(now())
  userCourses      UserCourse[]
  lessons          Lesson[]
}

model UserCourse {
  id        String         @id() @default(uuid())
  user      User           @relation(fields: [userId], references: [id])
  userId    String
  course    Course         @relation(fields: [courseId], references: [id])
  courseId  String
  role      UserCourseRole @default(STUDENT)
  createdAt DateTime       @default(now())

  @@unique([userId, courseId, role])
}

model Lesson {
  id              String         @id() @default(uuid())
  title           String
  type            String
  scenarioContext String
  lessonJson      Json?
  audioUrl        String?
  createdAt       DateTime       @default(now())
  course          Course         @relation(fields: [courseId], references: [id])
  courseId        String
  progress        ProgressStatus
}
