//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum ProgressStatus {
  COMPLETED
  IN_PROGRESS
  NOT_STARTED
}

model User {
  id             String   @id() @default(uuid())
  clerkId        String   @unique()
  createdAt      DateTime @default(now())
  studentCourses Course[] @relation("StudentCourses")
  tutorCourses   Course[] @relation("TutorCourses")
  lessons        Lesson[]
}

model Language {
  id            String          @id() @default(uuid())
  name          String
  createdAt     DateTime        @default(now())
  nativeCourses Course[]        @relation("NativeLanguage")
  targetCourses Course[]        @relation("TargetLanguage")
  nativeCatalog LessonCatalog[] @relation("CatalogNativeLanguage")
  targetCatalog LessonCatalog[] @relation("CatalogTargetLanguage")
}

model Course {
  id               String   @id() @default(uuid())
  nativeLanguage   Language @relation("NativeLanguage", fields: [nativeLanguageId], references: [id])
  nativeLanguageId String
  targetLanguage   Language @relation("TargetLanguage", fields: [targetLanguageId], references: [id])
  targetLanguageId String
  level            String
  createdAt        DateTime @default(now())
  student          User     @relation("StudentCourses", fields: [studentId], references: [id])
  studentId        String
  tutor            User?    @relation("TutorCourses", fields: [tutorId], references: [id])
  tutorId          String?
  lessons          Lesson[]
}

model Lesson {
  id              String         @id() @default(uuid())
  title           String
  type            String
  scenarioContext String
  lessonJson      Json?
  audioUrl        String?
  createdAt       DateTime       @default(now())
  course          Course         @relation(fields: [courseId], references: [id])
  courseId        String
  user            User           @relation(fields: [userId], references: [id])
  userId          String
  progress        ProgressStatus
}

model LessonCatalog {
  id               String   @id() @default(uuid())
  nativeLanguage   Language @relation("CatalogNativeLanguage", fields: [nativeLanguageId], references: [id])
  nativeLanguageId String
  targetLanguage   Language @relation("CatalogTargetLanguage", fields: [targetLanguageId], references: [id])
  targetLanguageId String
  content          Json
  createdAt        DateTime @default(now())
}
